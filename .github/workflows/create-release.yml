name: Build & Release Extension

on:
  push:
    branches:
      - main
      - develop
      - 'release/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install deps
        run: bun install --frozen-lockfile

      - name: Build extension (Turbo filter)
        run: bun run build --filter=magneto

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: extension-build
          path: apps/extension/dist/*.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/')
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: extension-build
          path: build-output

      - name: Determine release version
        id: version
        run: |
          ref="${GITHUB_REF#refs/heads/}"
          if [[ "$ref" == "main" ]]; then
            # main branch → read version from package.json
            version=$(jq -r .version apps/extension/package.json)
            echo "VERSION=v$version" >> $GITHUB_ENV
          elif [[ "$ref" == release/* ]]; then
            # release branch suffix → release/1.2.3 => v1.2.3
            version="${ref#release/}"
            echo "VERSION=v$version" >> $GITHUB_ENV
          fi

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: build-output/*.zip
          tag_name: ${{ env.VERSION }}
          prerelease: ${{ startsWith(github.ref, 'refs/heads/release/') }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}